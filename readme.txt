=== commit 1 ===
Созданы сущности, коорые связаны с базой данных:
TaskSample - 
TaskSampleParam - 
Вспогательный классы:
TaskValues -
Функционал:
- возможность совершать CRUD с шаблонами задач(TaskSample)
- выбор задач из 

= EditorController - контроллер отвечающий за редактор сущностей. На данный момент он включает себя только редактирование форм запуска задач, но потом он будет отвечать и за прочие сущности. В будущем он скорее всего переименуется в TaskSampleEditorController, а EditorController будет отвечать за вызовы отдельных редакторов. 
* showAllTaskSamples - выводит страницу, на которой находится вся информация о задачах, на котрой можно делать crud-операции (сейчас она не содердит информацию о параметрах задач)
* addNewTaskSample - открывает форму добавления новой задачи
* saveTaskSample - сохранение новой или изменённой задачи в базу данных
* addParamToTaskSample - добавление нового параметра к задаче. При добавлении нового параметра он не записывается сразу в базу данных. Поэтому до сохранения новые параметры будут иметь id=0. Это затрудняет операцию remove. Если удалять по id, то убираться будут все новодобавленные параметры. Отсюда происходит костыль: все несохранённые параметры удаляются по полю name. При добавлении нового параметра ему присваиватеся имя со случайным 4х-значным числом. Процесс генерации числа для имени основан на принципе "пока есть совпадение генерируй занаво", что при большом количестве новодобавленных параметров может иметь плохую производительность. 
* removeParamFromTaskSample - убирает из списка параметров задачи парметр по id, если он сохранён в базе данных или по name, если параметр был только добавлен. Таким образом здесь присутствует следующая ситуация: если убирании новодобавленные параметры будут обладать одинаковым именем, то все такие параметры будут убраны (то есть убирётся больше чем 1 параметр за раз) 
* updateTaskSample - выводит форму с параметрами задачи, которые можно изменить
* deleteTaskSample - удаляет из списка задач задачу по её id

FirstController:
index - выводит начальную страницу
goToEditor - переход в редактор
chooseTaskSampe - выбор задачи для запуска
startProcessingTask - запуск выполнения задачи

TaskSampleRepository/Service{Impl}:
getAllTaskSamples
saveTaskSample
getTaskSample
deleteTaskSample

TaskSampleParamRepository/Service{Impl}:
getTaskSampleParam
removeParamFromTaskSample

TaskSample:
int id
String name
String description
List<TaskSampleParam> params

TaskSampleParam:
int id
String name
TaskSampleParamType type

TaskValues:
List<String> values - дополнительный класс для передачи значений парметров в модели (наверное можно обычный лист использовать?)

Views:
index - начальная страница. Содержит ссылки на все формы запуска задач, кнопки перехода редактор
editor - страница редактора, пока содержит только редактор форм задач
launching-task - страница с заполнением формы запуска задачи
task-launched-info - страница, которая сообщает о запуске выполнения задачи, выводит значения которые были заполнены в форме
task-sample-info - страница с параметрами формы задачи
task-samples-editor

21.08.2024
ЗАМЕЧАНИЕ: в этом проекте плохо настроены каскадные операции. Они настороены и работают через MySQL, но не более. Поэтому могут возникнуть проблемы при установке проекта на другую систему. (По возможности настроить каскадные операции внутри проекта)